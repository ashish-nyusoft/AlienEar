@model SearchBoxModel
@using Nop.Web.Models.Catalog;

<script src="~/Themes/DefaultClean/Content/js/prefixfree.min.js"></script>
<script src="~/Themes/DefaultClean/Content/js/index.js"></script>
<style>
    .searchbox {
        position: relative;
        /*min-width: 50px;*/
        width: 0%;
        /*height: 50px;*/
        float: right;
        overflow: hidden;
        -webkit-transition: width 0.3s;
        -moz-transition: width 0.3s;
        -ms-transition: width 0.3s;
        -o-transition: width 0.3s;
        transition: width 0.3s;
    }

    .searchbox-input {
        top: 0;
        right: 0;
        border: 0;
        outline: 0;
        /*background: #dcddd8;*/
        width: 100%;
        height: 50px;
        margin: 0;
        padding: 0px 55px 0px 20px;
        font-size: 0px;
        color: red;
    }

        .searchbox-input::-webkit-input-placeholder {
            color: #d74b4b;
        }
    .search input[type="text"] 
    {
        border:none;
    }
        .searchbox-input:-moz-placeholder {
            color: #d74b4b;
        }

        .searchbox-input::-moz-placeholder {
            color: #d74b4b;
        }

        .searchbox-input:-ms-input-placeholder {
            color: #d74b4b;
        }

    .searchbox-icon,
    .searchbox-submit {
        width: 50px;
        height: 50px;
        display: block;
        position: absolute;
        top: 0;
        font-family: verdana;
        font-size: 22px;
        right: 0;
        padding: 0;
        margin: 0;
        border: 0;
        outline: 0;
        line-height: 50px;
        text-align: center;
        cursor: pointer;
        color: #dcddd8;
        /*background: #172b3c;*/
    }



    .searchbox-open {
        width: 100%;
    }
</style>

@Html.Widget("searchbox_before_search_button")
<span class="searchbox-icon"></span>
@if (Model.SearchTermMinimumLength > 0)
{
    <script type="text/javascript">
        $("#small-search-box-form").submit(function(event) {
            if ($("#small-searchterms").val() == "") {
                alert('@Html.Raw(HttpUtility.JavaScriptStringEncode(T("Search.EnterSearchTerms").Text))');
                $("#small-searchterms").focus();
                event.preventDefault();
            }
        });
    </script>
}
@if (Model.AutoCompleteEnabled)
{
    <text>
    <script type="text/javascript">
        $(document).ready(function() {
            $('#small-searchterms').autocomplete({
                delay: 500,
                minLength: @(Model.SearchTermMinimumLength.ToString()),
                source: '@(Url.RouteUrl("ProductSearchAutoComplete"))',
                appendTo: '.search-box',
                select: function(event, ui) {
                    $("#small-searchterms").val(ui.item.label);
                    setLocation(ui.item.producturl);
                    return false;
                }
            })
                        .data("ui-autocomplete")._renderItem = function(ul, item) {
                            var t = item.label;
                            //html encode
                            t = htmlEncode(t);
                            return $("<li></li>")
                                .data("item.autocomplete", item)
                                .append("<a>@(Model.ShowProductImagesInSearchAutoComplete ? Html.Raw("<img src='\" + item.productpictureurl + \"'>") : null)<span>" + t + "</span></a>")
                                .appendTo(ul);
                        };
        });
    </script>
    </text>
}
@Html.Widget("searchbox")
