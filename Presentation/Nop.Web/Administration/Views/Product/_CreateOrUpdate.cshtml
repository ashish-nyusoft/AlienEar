@model ProductModel
@Html.ValidationSummary(false)
@Html.HiddenFor(model => model.Id)

<script>
    $(document).ready(function () {
        //$(".getalltab ul li").click(function () {
        //    debugger;
        //    if ($(this).find("a").html().trim() == "Color and image mapping") {
        //        //$(".options input:eq(2)").attr("name", "SavewithImages");
        //        $("#product-form").attr("action", "/Admin/Product/EditWithImage");
                
        //    }
        //    else {
        //        //$(".options input:eq(2)").attr("name", "save-continue");
        //        $("#product-form").attr("action", "/Admin/Product/Edit/47");
        //    }
        //});





        $("#product-edit").kendoTabStrip({
            animation: {
                open: {
                    effects: "fadeIn"
                }
            },
            select: tabstrip_on_tab_select
        });




       @* $.ajax({
            type: "POST",
            url: '@Url.Action("CheckCategory","CustomizedColorAndImages")',//'/CustomizedColorAndImages/CheckCategory',
            data: { 'ProductId': '@Model.Id' },
            dataType: 'json',
            success: function (response) {
                //alert(response);
                //debugger;
                if (response != true) {
                    //$(".AllTab  .k-tabstrip-items:first").find("li:last").after("<li class='k-item k-state-default k-last' role='tab' aria-controls='product-edit-15'><span class='k-loading k-complete'></span><a class='k-link'>                Color And Image Mapping            </a>			</li>                ");
                    //$(".AllTab  .k-tabstrip-items .k-last").remove();
                }
            },
            error: function (error) {
                alert(error.response);
            }
        });*@
    });
</script>
<div id="product-edit" class="AllTab getalltab">
    <ul>
        <li @Html.RenderSelectedTabIndex(0, GetSelectedTabIndex())>
            @T("Admin.Catalog.Products.Info")
        </li>
        <li @Html.RenderSelectedTabIndex(1, GetSelectedTabIndex())>
            @T("Admin.Common.SEO")
        </li>
        <li @Html.RenderSelectedTabIndex(2, GetSelectedTabIndex())>
            @T("Admin.Catalog.Products.Pictures")
        </li>
        <li @Html.RenderSelectedTabIndex(3, GetSelectedTabIndex())>
            @T("Admin.Catalog.Products.Categories")
        </li>
        <li @Html.RenderSelectedTabIndex(4, GetSelectedTabIndex())>
            @T("Admin.Catalog.Products.Manufacturers")
        </li>
        <li @Html.RenderSelectedTabIndex(5, GetSelectedTabIndex())>
            @T("Admin.Catalog.Products.SpecificationAttributes")
        </li>
        <li @Html.RenderSelectedTabIndex(6, GetSelectedTabIndex())>
            @T("Admin.Catalog.Products.ProductAttributes")
        </li>
        <li @Html.RenderSelectedTabIndex(7, GetSelectedTabIndex())>
            @T("Admin.Catalog.Products.TierPrices")
        </li>
        <li @Html.RenderSelectedTabIndex(8, GetSelectedTabIndex())>
            @T("Admin.Catalog.Products.Discounts")
        </li>
        <li @Html.RenderSelectedTabIndex(9, GetSelectedTabIndex())>
            @T("Admin.Catalog.Products.Acl")
        </li>
        <li @Html.RenderSelectedTabIndex(10, GetSelectedTabIndex())>
            @T("Admin.Catalog.Products.Stores")
        </li>
        <li @Html.RenderSelectedTabIndex(11, GetSelectedTabIndex())>
            @T("Admin.Catalog.Products.RelatedProducts")
        </li>
        <li @Html.RenderSelectedTabIndex(12, GetSelectedTabIndex())>
            @T("Admin.Catalog.Products.CrossSells")
        </li>
        <li @Html.RenderSelectedTabIndex(13, GetSelectedTabIndex()) id="tab-associated-products">
            @T("Admin.Catalog.Products.AssociatedProducts")
        </li>
        @if (Model.Id > 0)
        {
            <li @Html.RenderSelectedTabIndex(14, GetSelectedTabIndex())>
                @T("Admin.Catalog.Products.PurchasedWithOrders")
            </li>
        }

        @*<li @Html.RenderSelectedTabIndex(15, GetSelectedTabIndex())>
            @T("Admin.Catalog.Products.ColorAndImageMapping")
        </li>*@

    </ul>
    <div>
        @TabInfo()
    </div>
    <div>
        @TabSeo()
    </div>
    <div>
        @TabPictures()
    </div>
    <div>
        @TabCategories()
    </div>
    <div>
        @TabManufacturers()
    </div>
    <div>
        @TabSpecificationAttributes()
    </div>
    <div>
        @TabProductAttributes()
    </div>
    <div>
        @TabTierPrices()
    </div>
    <div>
        @TabDiscounts()
    </div>
    <div>
        @TabAcl()
    </div>
    <div>
        @TabStores()
    </div>
    <div>
        @TabRelatedProducts()
    </div>
    <div>
        @TabCrossSells()
    </div>
    <div>
        @TabAssociatedProducts()
    </div>
    @if (Model.Id > 0)
    {
        <div>
            @TabPurchasedWithOrders()
        </div>
    }
    @if (Model.ProductTemplateId == 3)
    {
        <div>
            @TabColorsAndImages()
        </div>
    }
</div>

@{
    //custom tabs
    var eventMessage = new AdminTabStripCreated(this.Html, "product-edit");
    EngineContext.Current.Resolve<IEventPublisher>().Publish(eventMessage);
    foreach (var eventBlock in eventMessage.BlocksToRender)
    {
    @eventBlock
    }
}

@*save selected tab index*@
<input type="hidden" id="selected-tab-index" name="selected-tab-index" value="@(GetSelectedTabIndex())">

@helper TabInfo()
{ 
    @Html.Partial("_CreateOrUpdate.Info", Model)
}
@helper TabSeo()
{
    @Html.Partial("_CreateOrUpdate.SEO", Model)
}
@helper TabCategories()
{
    @Html.Partial("_CreateOrUpdate.Categories", Model)
}
@helper TabManufacturers()
{
    @Html.Partial("_CreateOrUpdate.Manufacturers", Model)
}
@helper TabPictures()
{
    @Html.Partial("_CreateOrUpdate.Pictures", Model)
}
@helper TabSpecificationAttributes()
{
    @Html.Partial("_CreateOrUpdate.SpecificationAttributes", Model)
}
@helper TabAcl()
{
    @Html.Partial("_CreateOrUpdate.Acl", Model)
}
@helper TabStores()
{
    @Html.Partial("_CreateOrUpdate.Stores", Model)
}

@helper TabTierPrices()
{
    @Html.Partial("_CreateOrUpdate.TierPrices", Model)
}
@helper TabProductAttributes()
{
    @Html.Partial("_CreateOrUpdate.ProductAttributes", Model)
}
@helper TabDiscounts()
{
    @Html.Partial("_CreateOrUpdate.Discounts", Model)
}
@helper TabRelatedProducts()
{
    @Html.Partial("_CreateOrUpdate.RelatedProducts", Model)
}
@helper TabCrossSells()
{
    @Html.Partial("_CreateOrUpdate.CrossSells", Model)
}
@helper TabAssociatedProducts()
{
    @Html.Partial("_CreateOrUpdate.AssociatedProducts", Model)
}
@helper TabPurchasedWithOrders()
{
    @Html.Partial("_CreateOrUpdate.PurchasedWithOrders", Model)
}

@helper TabColorsAndImages()
{
    Model.colorImage.ProductID = Model.Id;
   // @Html.Partial("_CreateOrUpdate.ColorsAndImages", Model.colorImage)
}
