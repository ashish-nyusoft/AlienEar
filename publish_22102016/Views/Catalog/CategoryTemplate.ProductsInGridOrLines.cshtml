@model CategoryModel
@{
    //Layout = "~/Views/Shared/ColumnsOne.cshtml";
    Layout = "~/Views/Shared/HomeCateg_ColumnsOne.cshtml";

    Html.AddTitleParts(!String.IsNullOrEmpty(Model.MetaTitle) ? Model.MetaTitle : Model.Name);
    Html.AddMetaDescriptionParts(Model.MetaDescription);
    Html.AddMetaKeywordParts(Model.MetaKeywords);

    var canonicalUrlsEnabled = EngineContext.Current.Resolve<SeoSettings>().CanonicalUrlsEnabled;
    if (canonicalUrlsEnabled)
    {
        var categoryUrl = Url.RouteUrl("Category", new { SeName = Model.SeName }, this.Request.Url.Scheme);
        Html.AddCanonicalUrlParts(categoryUrl);
    }

    var breadcrumbDelimiter = EngineContext.Current.Resolve<CommonSettings>().BreadcrumbDelimiter;
}
@using Nop.Core.Domain.Common;
@using Nop.Core.Domain.Seo;
@using Nop.Core.Infrastructure;
@using Nop.Web.Models.Catalog;
@*category breadcrumb*@
@section Breadcrumb
{
    @if (Model.DisplayCategoryBreadcrumb)
    {
        <div class="breadcrumb">
            <ul>
                <li>
                    <a href="@Url.RouteUrl("HomePage")" title="@T("Categories.Breadcrumb.Top")">@T("Categories.Breadcrumb.Top")</a>
                    <span class="delimiter">@breadcrumbDelimiter</span>
                </li>
                @foreach (var cat in Model.CategoryBreadcrumb)
                {
                    var isLastCategory = cat.Id == Model.Id;
                    <li>
                        @if (isLastCategory)
                        {
                            <strong class="current-item">@cat.Name</strong>
                        }
                        else
                        {
                            <a href="@Url.RouteUrl("Category", new { SeName = cat.SeName })" title="@cat.Name">@cat.Name</a>
                            <span class="delimiter">@breadcrumbDelimiter</span>
                        }
                    </li>
                }
            </ul>
        </div>
        @Html.Widget("categorydetails_after_breadcrumb", Model.Id)
    }
}
<div class="page category-page">
    @{
        string path = "/Themes/DefaultClean/Content/images/product-banner.png";
        if (!string.IsNullOrEmpty(Model.Description))
        {
            //string tempPath[]= Model.Description.Split(new string[] { "img src=" }, StringSplitOptions.None);
            //string tempPath1[] = tempPath[1].ToString().Substring(1, tempPath[1].ToString().Length).Split(new string[] { " alt=" }, StringSplitOptions.None);
            //path = tempPath1[0].ToString().Substring(0, tempPath1[0].ToString().Length - 1);
        }

     }
    
    
    <div class="product_banner"> 
    @if (Model.Name.ToUpper() != "TRADE IN")
    {
    if (!string.IsNullOrEmpty(Model.Description))
    {
    @Html.Raw(Model.Description.Replace("<p>", "").Replace("</p>", ""))
    }
    else
    { <img src="@path" /> 
    }
    }</div>
    <div class="page-title">
        <h1>@Model.Name</h1>
    </div>
    <div class="master-wrapper-content">
        <div class="page-body">
            @Html.Widget("categorydetails_top", Model.Id)
            @*description*@
@if (Model.Name.ToUpper() == "TRADE IN")
{
            if (!String.IsNullOrWhiteSpace(Model.Description))
            {
                <div class="category-description">
                    @Html.Raw(Model.Description)
                </div>
            }
}
            @Html.Widget("categorydetails_before_subcategories", Model.Id)
            @*subcategories*@
            @if (Model.SubCategories.Count > 0)
            {
                <div class="category-grid sub-category-grid">
                    <div class="item-grid">
                        @foreach (var item in Model.SubCategories)
                        {
                            <div class="item-box">
                                <div class="sub-category-item">
                                    <h2 class="title">
                                        <a href="@Url.RouteUrl("Category", new { SeName = item.SeName })" title="@item.PictureModel.Title">
                                            @item.Name
                                        </a>
                                    </h2>
                                    <div class="picture">
                                        <a href="@Url.RouteUrl("Category", new { SeName = item.SeName })" title="@item.PictureModel.Title">
                                            <img alt="@item.PictureModel.AlternateText" src="@item.PictureModel.ImageUrl" title="@item.PictureModel.Title" />
                                        </a>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            }
            @Html.Widget("categorydetails_before_featured_products", Model.Id)
            @*featured products*@
            @if (Model.FeaturedProducts.Count > 0)
            {
                <div class="product-grid featured-product-grid">
                    <div class="title">
                        <strong>@T("Products.FeaturedProducts")</strong>
                    </div>
                    <div class="item-grid">
                        @if (Model.Id == 17 || Model.Id == 19)
                        {
                            foreach (var item in Model.FeaturedProducts)
                            {
                                <div class="item-box">
                                    @Html.Partial("_ProductBox_Coustomize", item)
                                </div>
                            }
                        }
                        else
                        {
                            foreach (var item in Model.FeaturedProducts)
                            {
                                <div class="item-box">
                                    @Html.Partial("_ProductBox", item)
                                </div>
                            }
                        }
                    </div>
                </div>
            }
            @Html.Widget("categorydetails_after_featured_products", Model.Id)
            @*@if (Model.Products.Count > 0)
                {
                    @Html.Partial("_CatalogSelectors", Model.PagingFilteringContext, new ViewDataDictionary())
                }*@
            @Html.Widget("categorydetails_before_filters", Model.Id)
            <div class="product-filters">
                @*filtering*@
                @if (Model.PagingFilteringContext.PriceRangeFilter.Enabled)
                {
                    @Html.Partial("_FilterPriceBox", Model.PagingFilteringContext.PriceRangeFilter, new ViewDataDictionary())
                }
                @*filtering*@
                @if (Model.PagingFilteringContext.SpecificationFilter.Enabled)
                {
                    @Html.Partial("_FilterSpecsBox", Model.PagingFilteringContext.SpecificationFilter, new ViewDataDictionary())
                }
            </div>
            @Html.Widget("categorydetails_before_product_list", Model.Id)

            @if (Model.Products.Count > 0)
            {
                <div class="@(Model.PagingFilteringContext.ViewMode == "list" ? "product-list" : "product-grid")">
                    <div class="item-grid">

                        @foreach (var item in Model.Products)
                        {
                            <div class="item-box">
                                @if (item.CategoryID == 17 || item.CategoryID == 19)
                                {
                                    @Html.Partial("_ProductBox_Coustomize", item)
                                }
                                else
                                {
                                    @Html.Partial("_ProductBox", item)
                                }
                            </div>
                        }

                    </div>
                </div>
            }
            @{
                var pager = Html.Pager(Model.PagingFilteringContext).QueryParam("pagenumber");
            }
            @if (!pager.IsEmpty())
            {
                <div class="pager">
                    @pager
                </div>
            }
            @Html.Widget("categorydetails_bottom", Model.Id)
        </div>
    </div>
</div>
