@using Nop.Core.Domain.Catalog
@model ProductModel

@if (Model.Id > 0)
{

    /*hide "add spec" table if no attributes are defined*/
    if (Model.AddSpecificationAttributeModel.AvailableAttributes.Count > 0)
    {
        <div>
            <div id="specificationattributes-grid"></div>

            <script>
                $(document).ready(function() {
                    $("#specificationattributes-grid").kendoGrid({
                        dataSource: {
                            type: "json",
                            transport: {
                                read: {
                                    url: "@Html.Raw(Url.Action("ProductSpecAttrList", "Product", new { productId = Model.Id }))",
                                    type: "POST",
                                    dataType: "json",
                                    data: addAntiForgeryToken
                                },
                                update: {
                                    url: "@Html.Raw(Url.Action("ProductSpecAttrUpdate", "Product"))",
                                    type: "POST",
                                    dataType: "json",
                                    data: addAntiForgeryToken
                                },
                                destroy: {
                                    url: "@Html.Raw(Url.Action("ProductSpecAttrDelete", "Product"))",
                                    type: "POST",
                                    dataType: "json",
                                    data: addAntiForgeryToken
                                }
                            },
                            schema: {
                                data: "Data",
                                total: "Total",
                                errors: "Errors",
                                model: {
                                    id: "Id",
                                    fields: {
                                        //ProductId: { editable: false, type: "number" },
                                        AttributeTypeName: { editable: false, type: "string" },
                                        AttributeName: { editable: false, type: "string" },
                                        ValueRaw: { editable: true, type: "string" },
                                        AllowFiltering: { editable: false, type: "boolean" },
                                        ShowOnProductPage: { editable: true, type: "boolean" },
                                        DisplayOrder: { editable: true, type: "number" },
                                        Id: { editable: false, type: "number" }
                                    }
                                }
                            },
                            requestEnd: function(e){
                                if (e.type == "update") {
                                    this.read();
                                    var item = $("#specificationattributes-grid").data("kendoGrid").dataItem($(this).closest('tr').Id);
                                    //alert( $("#specificationattributes-grid").data('Id'));
                                }
                            },
                            error: function(e) {
                                display_kendoui_grid_error(e);
                                // Cancel the changes
                                this.cancelChanges();
                            },
                            serverPaging: true,
                            serverFiltering: true,
                            serverSorting: true
                        },
                        pageable: {
                            refresh: true,
                            numeric: false,
                            previousNext: false,
                            info: false
                        },
                        editable: {
                            confirmation: false,
                            mode: "inline"
                        },
                        //editable: true,
                        scrollable: false,
                        columns: [{
                            field: "AttributeTypeName",
                            title: "@T("Admin.Catalog.Products.SpecificationAttributes.Fields.AttributeType")",
                                width: 150
                        },{
                            field: "AttributeName",
                            title: "@T("Admin.Catalog.Products.SpecificationAttributes.Fields.SpecificationAttribute")",
                                width: 200
                            }, {
                                field: "ValueRaw",
                                title: "@T("Admin.Catalog.Products.SpecificationAttributes.Fields.Value")",
                                width: 200,
                                encoded:false,
								
								
                            }, {
                                field: "AllowFiltering",
                                title: "@T("Admin.Catalog.Products.SpecificationAttributes.Fields.AllowFiltering")",
                                width: 150,
                                headerAttributes: { style: "text-align:center" },
                                attributes: { style: "text-align:center" },
                                template: '<img src="@Url.Content("~/Administration/Content/images/")active-#=AllowFiltering#.gif" />'
                            }, {
                                field: "ShowOnProductPage",
                                title: "@T("Admin.Catalog.Products.SpecificationAttributes.Fields.ShowOnProductPage")",
                                width: 150,
                                headerAttributes: { style: "text-align:center" },
                                attributes: { style: "text-align:center" },
                                template: '<img src="@Url.Content("~/Administration/Content/images/")active-#=ShowOnProductPage#.gif" />'
                            },
                            {
                                field: "DisplayOrder",
                                title: "@T("Admin.Catalog.Products.SpecificationAttributes.Fields.DisplayOrder")",
                                width: 150,
                                //integer format
                                format: "{0:0}"
                            },  {
                                field: "Id",
                                title: "@T("Admin.Common.Edit")",  
                                //width: 150,
                                //headerAttributes: { style: "text-align:center" },
                                //attributes: { style: "text-align:center" },
                            	template: '<input type="button"  onclick="editSpecification(#=Id#)" value="@T("Admin.Common.Edit")"/>'
                            },
							{
							    command: [
                                   @* {
                                        name: "edit",
                                        text: "@T("Admin.Common.Edit")",  
                                    	click: function(e){
                                    		//alert('#=Id#');
                                    		//alert($("#specificationattributes-grid_active_cell").attr('Id'));
                                    		//alert($("#specificationattributes-grid").data("kendoGrid").dataItem($(this).closest('tr')));
                                    		
                                        }
                                    }, *@
									{
									    name: "destroy",
									    text: "@T("Admin.Common.Delete")"
									}
                                ],
							    width: 200
							}
                        ]
                    });
                });
            </script>
        </div>
    <p>
        <strong>@T("Admin.Catalog.Products.SpecificationAttributes.AddNew")</strong>
    </p>
    <script type="text/javascript">
    	
        function editSpecification(id)
        {
            //debugger;
            var action ="@(Url.Action("EditProductSpecAttr", "Product"))";
    	    //var data= JSON.stringify({"id": id});
    		var Type= "POST";
    	    //var r =_Ajax(action, data, Type);
    	    //var j= r;
    	    //var value = $(this).val();
    		var data={"spid": id};
										
    		var ajaxUrl = action;
    		$.ajax({
    		    type: "GET", 		//GET or POST or PUT or DELETE verb
    		    url: ajaxUrl, 		// Location of the service
    		    data:data, 		//Data sent to server
    		    contentType: "application/json; charset=utf-8",		// content type sent to server
    		    dataType: "json", 	//Expected data format from server
    		    processdata: true, 	//True or False
    		    success: function (json) {//On Successful service call
												
    		        //alert(json.success);
    		        if(json.success == true)
    		        { 
    		            //debugger;
    		            var AId=json.data.Id;
    		            var AttributeTypeId=json.data.AttributeTypeId;
    		            var SpecificationAttributeOptionId=json.data.SpecificationAttributeOptionId;
    		            var CustomValue=json.data.ValueRaw;
    		            var ShowOnProductPage=json.data.ShowOnProductPage;
    		            var DisplayOrder=json.data.DisplayOrder;
    		            $("#hdnattrid").val(AId);
    		            $("#AddSpecificationAttributeModel_AttributeTypeId").val(AttributeTypeId);
    		            $("#AddSpecificationAttributeModel_SpecificationAttributeId").val(SpecificationAttributeOptionId);
    		            window.parent.tinymce.get('AddSpecificationAttributeModel_CustomValue').setContent(CustomValue);
    		            //$("#AddSpecificationAttributeModel_CustomValue").val(CustomValue);
    		            $("#AddSpecificationAttributeModel_ShowOnProductPage").val(ShowOnProductPage);
    		            $("#AddSpecificationAttributeModel_DisplayOrder").val(DisplayOrder);
													
    		            //$('#SpecificationPassID').val(AId);
    		        }
    		        else{
													
    		        }
    		    },
    		    error: function (error) {
    		        alert(error);
    		    }// When Service call fails
    		});
        }
        $(document).ready(function() {
            $("#@Html.FieldIdFor(model => model.AddSpecificationAttributeModel.SpecificationAttributeId)").change(function() {
                var selectedAttributeId = $(this).val();
                $.ajax({
                    cache: false,
                    type: "GET",
                    url: "@(Url.Action("GetOptionsByAttributeId", "SpecificationAttribute"))",
                    data: { "attributeId": selectedAttributeId },
                    success: function(data) {
                        var ddlSpecOptions = $("#@Html.FieldIdFor(model => model.AddSpecificationAttributeModel.SpecificationAttributeOptionId)");
                        ddlSpecOptions.html('');
                        $.each(data, function(id, option) {
                            ddlSpecOptions.append($('<option></option>').val(option.id).html(option.name));
                        });
                    },
                    error: function(xhr, ajaxOptions, thrownError) {
                        alert('Failed to retrieve specification options.');
                    }
                });
            });
        });

            $(document).ready(function() {
                $('#addProductSpec').click(function() {
                    //debugger;
                    var attId=$("#hdnattrid").val();
                    var attributeTypeId = $("#@Html.FieldIdFor(model => model.AddSpecificationAttributeModel.AttributeTypeId)").val();
        		
        		var specificationAttributeOptionId = $("#@Html.FieldIdFor(model => model.AddSpecificationAttributeModel.SpecificationAttributeOptionId)").val();
        	    //var specificationAttributeOptionId = $("#AddSpecificationAttributeModel_SpecificationAttributeId").val();
        		@*//var customValue = $("#@Html.FieldIdFor(model => model.AddSpecificationAttributeModel.CustomValue)").text();*@
        		
        	    var allowFiltering = $("#@Html.FieldIdFor(model => model.AddSpecificationAttributeModel.AllowFiltering)").is(':checked');
        	    var showOnProductPage = $("#@Html.FieldIdFor(model => model.AddSpecificationAttributeModel.ShowOnProductPage)").is(':checked');
        	    var displayOrder = $("#@Html.FieldIdFor(model => model.AddSpecificationAttributeModel.DisplayOrder)").val();
        		
        	    //var customValuess = $('#AddSpecificationAttributeModel_CustomValue').val();

        	    var customValuess = window.parent.tinymce.get('AddSpecificationAttributeModel_CustomValue').getContent();
        	    alert(customValuess);

        	    if (specificationAttributeOptionId === null) {
        	        //some validation
        	        if (attributeTypeId == @(((int) SpecificationAttributeType.Option).ToString())) {
                        //option
                        alert('Select specification attribute option');
                } else {
                    //other (text, hyperlink, etc)
                    alert('First, please create at least one specification attribute option');
                }
        	} else {
                    $('#addProductSpec').attr('disabled', true);
            
            var postData = {
                attID:attId,
                attributeTypeId: attributeTypeId,
                specificationAttributeOptionId: specificationAttributeOptionId,
                customValue: customValuess,
                allowFiltering: allowFiltering,
                showOnProductPage: showOnProductPage,
                displayOrder: displayOrder,
                       
                productId: @(Model.Id)
                        };
            addAntiForgeryToken(postData);

            $.ajax({
                cache: false,
                type: "POST",
                url: "@(Url.Action("ProductSpecificationAttributeAdd", "Product"))",
                        data: postData,
                        success: function(data) {
                            var grid = $("#specificationattributes-grid").data('kendoGrid');
                            grid.dataSource.read();
                            //$("#updateCK").attr(data);
                            //var tinymce_editor_id = '#mce_76'; 
                            //tinymce.get(tinymce_editor_id).setContent('#pnlCustomValue');
                            $('#addProductSpec').attr('disabled', false);                           
                            $("#reset").click();
                        },
                        error: function(xhr, ajaxOptions, thrownError) {
                            alert('Failed to add specification attribute.');
                            $('#addProductSpec').attr('disabled', false);
                        }
                    });
        
        }

                });
                });


                $(document).ready(function() {
                    $("#@Html.FieldIdFor(model => model.AddSpecificationAttributeModel.AttributeTypeId)").change(toggleAttributeType);

            toggleAttributeType();

        });

        function toggleAttributeType() {
            var selectedTypeId = $("#@Html.FieldIdFor(model => model.AddSpecificationAttributeModel.AttributeTypeId)").val();
            if (selectedTypeId == @(((int)SpecificationAttributeType.Option).ToString())) {
                $('#pnlSpecificationAttributeOptionId').hide();
            $('#pnlCustomValue').show();
            $('#pnlAllowFiltering').hide();
        } else if (selectedTypeId == @(((int)SpecificationAttributeType.CustomText).ToString())) {
            $('#pnlSpecificationAttributeOptionId').hide();
            $('#pnlCustomValue').show();
            $('#pnlAllowFiltering').hide();
        } else if (selectedTypeId == @(((int)SpecificationAttributeType.CustomHtmlText).ToString())) {
                $('#pnlSpecificationAttributeOptionId').hide();
                $('#pnlCustomValue').show();
                $('#pnlAllowFiltering').hide();
            } else if (selectedTypeId == @(((int)SpecificationAttributeType.Hyperlink).ToString())) {
                $('#pnlSpecificationAttributeOptionId').hide();
                $('#pnlCustomValue').show();
                $('#pnlAllowFiltering').hide();
            }
        }
    </script>
    <table class="adminContent" id="updateCK">
@*      <tr><td>@Html.Hidden("SpecificationPassID")</td></tr>*@
		      <tr><td><input type="hidden" id="hdnattrid" value="0" /></td></tr>
		  <tr>
			 <td class="adminTitle">
                @Html.NopLabelFor(model => model.AddSpecificationAttributeModel.AttributeTypeId):
            </td>
            <td class="adminData">
                @Html.DropDownListFor(model => model.AddSpecificationAttributeModel.AttributeTypeId, ((SpecificationAttributeType)Model.AddSpecificationAttributeModel.AttributeTypeId).ToSelectList())
                @Html.ValidationMessageFor(model => model.AddSpecificationAttributeModel.AttributeTypeId)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.AddSpecificationAttributeModel.SpecificationAttributeId):
            </td>
            <td class="adminData">
                @Html.DropDownListFor(model => model.AddSpecificationAttributeModel.SpecificationAttributeId, Model.AddSpecificationAttributeModel.AvailableAttributes)
                @Html.ValidationMessageFor(model => model.AddSpecificationAttributeModel.SpecificationAttributeId)
            </td>
        </tr>
        <tr id="pnlSpecificationAttributeOptionId">
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.AddSpecificationAttributeModel.SpecificationAttributeOptionId):
            </td>
            <td class="adminData">
                @Html.DropDownListFor(model => model.AddSpecificationAttributeModel.SpecificationAttributeOptionId, Model.AddSpecificationAttributeModel.AvailableOptions)
                @Html.ValidationMessageFor(model => model.AddSpecificationAttributeModel.SpecificationAttributeOptionId)
            </td>
        </tr>
        <tr id="pnlCustomValue">
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.AddSpecificationAttributeModel.CustomValue):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.AddSpecificationAttributeModel.CustomValue,"RichEditor")
                @Html.ValidationMessageFor(model => model.AddSpecificationAttributeModel.CustomValue)
            </td>
        </tr>
        <tr id="pnlAllowFiltering">
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.AddSpecificationAttributeModel.AllowFiltering):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.AddSpecificationAttributeModel.AllowFiltering)
                @Html.ValidationMessageFor(model => model.AddSpecificationAttributeModel.AllowFiltering)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.AddSpecificationAttributeModel.ShowOnProductPage):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.AddSpecificationAttributeModel.ShowOnProductPage)
                @Html.ValidationMessageFor(model => model.AddSpecificationAttributeModel.ShowOnProductPage)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.AddSpecificationAttributeModel.DisplayOrder):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.AddSpecificationAttributeModel.DisplayOrder)
                @Html.ValidationMessageFor(model => model.AddSpecificationAttributeModel.DisplayOrder)
            </td>
        </tr>
        <tr>
            <td align="left">
                <input type="button" id="addProductSpec" class="k-button" value="@T("Admin.Catalog.Products.SpecificationAttributes.AddButton")" />
            </td>
			<td>
				<input type="reset" id="reset" value="@T("Admin.Catalog.Products.SpecificationAttributes.Cancel")" />
			</td>
        </tr>
    </table>
    }
    else
    {
    @T("Admin.Catalog.Products.SpecificationAttributes.NoAttributes")
    }
}
else
{
    @T("Admin.Catalog.Products.SpecificationAttributes.SaveBeforeEdit")
}