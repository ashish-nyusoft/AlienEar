@model ProductModel
@Html.ValidationSummary(false)
@Html.HiddenFor(model => model.Id)

<style>
    .Error {
        border: 1px solid #f00;
    }
</style>


<script>
    function OnSubmitVal()
    {
        debugger;
        var actions= $("#product-form").attr("action");
        if(actions.indexOf("EditWithImage") != -1 )
        {
            debugger;
            var i=0,l=0;
            var j=0,k=0;

            $('input[name="LeftImage"]').each(function() {
                debugger;
                var $this = $(this);
                var $this1 = $(this).closest('tr').find(".rightFile");
                if ($this.val() == '' && $this1.val() == '') { 
                    //Response('- Upload file not selected!', true);
                    $this.removeClass('Error');
                    $this1.removeClass('Error');
                    //return false;
                } else {
                    if($this.val() == '')
                    {
                        $this.addClass('Error').fadeOut().fadeIn();
                        $(this).closest('tr').find(".chksingle").prop('checked', false);
                        l=1;
                    }
                    else
                    {
                        $this.removeClass('Error');
                        $(this).closest('tr').find(".chksingle").prop('checked', true);
                        l=0;
                    }
                    if($this1.val() == '')
                    {
                        $this1.addClass('Error').fadeOut().fadeIn();
                        $(this).closest('tr').find(".chksingle").prop('checked', false);
                        l=1;
                    }
                    else
                    {
                        $this1.removeClass('Error');
                        $(this).closest('tr').find(".chksingle").prop('checked', true);
                        l=0;
                    }
                    i=l;
                    
                }
            });
            $('input[name="RightImage"]').each(function() {
                debugger;
                var $this = $(this);

                var $this1 = $(this).closest('tr').find(".leftFile");

                if ($this.val() == '' && $this1.val() == '') { 
                    //Response('- Upload file not selected!', true);
                    $this.removeClass('Error');
                    //return false;
                } else {
                    if($this.val() == '')
                    {
                        $this.addClass('Error').fadeOut().fadeIn();
                        $(this).closest('tr').find(".chksingle").prop('checked', false);
                        k=1;
                    }
                    else
                    {
                        $this.removeClass('Error');
                        $(this).closest('tr').find(".chksingle").prop('checked', true);
                        k=0;
                    }
                    if($this1.val() == '')
                    {
                        $this1.addClass('Error').fadeOut().fadeIn();
                        $(this).closest('tr').find(".chksingle").prop('checked', false);
                        k=1;
                    }
                    else
                    {
                        $this1.removeClass('Error');
                        $(this).closest('tr').find(".chksingle").prop('checked', true);
                        k=0;
                    }
                    j=k;
                    
                }
            });
            if(i==1 || j==1)
            {
                return false;
            }
        }
    }
    $(document).ready(function () {
        $(".getalltab ul li").click(function () {
            //debugger;
            if ($(this).find("a").html().trim() == "Color and image mapping") {
                //$(".options input:eq(2)").attr("name", "SavewithImages");
                $("#product-form").attr("action", "@Url.Action("EditWithImage","Product")");
                
            }
            else {
                //$(".options input:eq(2)").attr("name", "save-continue");
                $("#product-form").attr("action", "@Url.Action("Edit", "Product", new { id= Model.Id})");
            }
        });


        //$("#save-c-submit").click(function (){
            
        //});


        $("#product-edit").kendoTabStrip({
            animation: {
                open: {
                    effects: "fadeIn"
                }
            },
            select: tabstrip_on_tab_select
        });




        $.ajax({
            type: "POST",
            url: '@Url.Action("CheckCategory","CustomizedColorAndImages")',//'/CustomizedColorAndImages/CheckCategory',
            data: { 'ProductId': '@Model.Id' },
            dataType: 'json',
            success: function (response) {
                //alert(response);
                //debugger;
                if (response != true) {
                    //$(".AllTab  .k-tabstrip-items:first").find("li:last").after("<li class='k-item k-state-default k-last' role='tab' aria-controls='product-edit-15'><span class='k-loading k-complete'></span><a class='k-link'>                Color And Image Mapping            </a>			</li>                ");
                    $(".AllTab  .k-tabstrip-items .k-last").remove();
                }
            },
            error: function (error) {
                alert(error.response);
            }
        });
    });
</script>




@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "product-form", enctype = "multipart/form-data" , onSubmit="return OnSubmitVal();"}))
{
    @Html.HiddenFor(x => x.Id);
    <div class="section-header">
        @Html.AntiForgeryToken()
        <div class="title">
            <img src="@Url.Content("~/Administration/Content/images/ico-catalog.png")" alt="" />
            @T("Admin.Catalog.Products.EditProductDetails") - @Model.Name @Html.ActionLink("(" + T("Admin.Catalog.Products.BackToList") + ")", "List")
        </div>
        <div class="options">
            <input type="submit" value="@T("Admin.Common.Preview")" onclick="javascript:OpenWindow('@Url.RouteUrl("Product", new { SeName = Model.SeName })    ', 800, 600, true); return false;" class="k-button" />
            <input type="submit" name="save" class="k-button" value="@T("Admin.Common.Save")" />
            <input type="submit" name="save-continue" id="save-c-submit" class="k-button" value="@T("Admin.Common.SaveContinue")" />
            <input type="submit" id="copyproduct" name="copyproduct" class="k-button" value="@T("Admin.Catalog.Products.Copy")" />
            <span id="product-delete" class="k-button">@T("Admin.Common.Delete")</span>
        </div>

    </div>
    <div id="product-edit" class="AllTab getalltab">
        <ul>

            <li @Html.RenderSelectedTabIndex(0, GetSelectedTabIndex())>
                @T("Admin.Catalog.Products.Info")
            </li>
            <li @Html.RenderSelectedTabIndex(1, GetSelectedTabIndex())>
                @T("Admin.Common.SEO")
            </li>
            <li @Html.RenderSelectedTabIndex(2, GetSelectedTabIndex())>
                @T("Admin.Catalog.Products.Pictures")
            </li>
            <li @Html.RenderSelectedTabIndex(3, GetSelectedTabIndex())>
                @T("Admin.Catalog.Products.Categories")
            </li>
            <li @Html.RenderSelectedTabIndex(4, GetSelectedTabIndex())>
                @T("Admin.Catalog.Products.Manufacturers")
            </li>
            <li @Html.RenderSelectedTabIndex(5, GetSelectedTabIndex())>
                @T("Admin.Catalog.Products.SpecificationAttributes")
            </li>
            <li @Html.RenderSelectedTabIndex(6, GetSelectedTabIndex())>
                @T("Admin.Catalog.Products.ProductAttributes")
            </li>
            <li @Html.RenderSelectedTabIndex(7, GetSelectedTabIndex())>
                @T("Admin.Catalog.Products.TierPrices")
            </li>
            <li @Html.RenderSelectedTabIndex(8, GetSelectedTabIndex())>
                @T("Admin.Catalog.Products.Discounts")
            </li>
            <li @Html.RenderSelectedTabIndex(9, GetSelectedTabIndex())>
                @T("Admin.Catalog.Products.Acl")
            </li>
            <li @Html.RenderSelectedTabIndex(10, GetSelectedTabIndex())>
                @T("Admin.Catalog.Products.Stores")
            </li>
            <li @Html.RenderSelectedTabIndex(11, GetSelectedTabIndex())>
                @T("Admin.Catalog.Products.RelatedProducts")
            </li>
            <li @Html.RenderSelectedTabIndex(12, GetSelectedTabIndex())>
                @T("Admin.Catalog.Products.CrossSells")
            </li>
            <li @Html.RenderSelectedTabIndex(13, GetSelectedTabIndex()) id="tab-associated-products">
                @T("Admin.Catalog.Products.AssociatedProducts")
            </li>
            @if (Model.Id > 0)
            {
                <li @Html.RenderSelectedTabIndex(14, GetSelectedTabIndex())>
                    @T("Admin.Catalog.Products.PurchasedWithOrders")
                </li>
            }

            <li @Html.RenderSelectedTabIndex(15, GetSelectedTabIndex())>
                @T("Admin.Catalog.Products.ColorAndImageMapping")
            </li>

        </ul>

        <div>
            @TabInfo()
        </div>
        <div>
            @TabSeo()
        </div>
        <div>
            @TabPictures()
        </div>
        <div>
            @TabCategories()
        </div>
        <div>
            @TabManufacturers()
        </div>
        <div>
            @TabSpecificationAttributes()
        </div>
        <div>
            @TabProductAttributes()
        </div>
        <div>
            @TabTierPrices()
        </div>
        <div>
            @TabDiscounts()
        </div>
        <div>
            @TabAcl()
        </div>
        <div>
            @TabStores()
        </div>
        <div>
            @TabRelatedProducts()
        </div>
        <div>
            @TabCrossSells()
        </div>
        <div>
            @TabAssociatedProducts()
        </div>
        @if (Model.Id > 0)
        {
            <div>
                @TabPurchasedWithOrders()
            </div>
        }
        
        
            <div>
                @TabColorsAndImages()
            </div>
       

        
    </div>
}
    @{
        //custom tabs
        var eventMessage = new AdminTabStripCreated(this.Html, "product-edit");
        EngineContext.Current.Resolve<IEventPublisher>().Publish(eventMessage);
        foreach (var eventBlock in eventMessage.BlocksToRender)
        {
        @eventBlock
        }
    }

@*save selected tab index*@
    <input type="hidden" id="selected-tab-index" name="selected-tab-index" value="@(GetSelectedTabIndex())">

    @helper TabInfo()
{ 
        @Html.Partial("_CreateOrUpdate.Info", Model)
    }
    @helper TabSeo()
{
        @Html.Partial("_CreateOrUpdate.SEO", Model)
    }
    @helper TabCategories()
{
        @Html.Partial("_CreateOrUpdate.Categories", Model)
    }
    @helper TabManufacturers()
{
        @Html.Partial("_CreateOrUpdate.Manufacturers", Model)
    }
    @helper TabPictures()
{
        @Html.Partial("_CreateOrUpdate.Pictures", Model)
    }
    @helper TabSpecificationAttributes()
{
        @Html.Partial("_CreateOrUpdate.SpecificationAttributes", Model)
    }
    @helper TabAcl()
{
        @Html.Partial("_CreateOrUpdate.Acl", Model)
    }
    @helper TabStores()
{
        @Html.Partial("_CreateOrUpdate.Stores", Model)
    }

    @helper TabTierPrices()
{
        @Html.Partial("_CreateOrUpdate.TierPrices", Model)
    }
    @helper TabProductAttributes()
{
        @Html.Partial("_CreateOrUpdate.ProductAttributes", Model)
    }
    @helper TabDiscounts()
{
        @Html.Partial("_CreateOrUpdate.Discounts", Model)
    }
    @helper TabRelatedProducts()
{
        @Html.Partial("_CreateOrUpdate.RelatedProducts", Model)
    }
    @helper TabCrossSells()
{
        @Html.Partial("_CreateOrUpdate.CrossSells", Model)
    }
    @helper TabAssociatedProducts()
{
        @Html.Partial("_CreateOrUpdate.AssociatedProducts", Model)
    }
    @helper TabPurchasedWithOrders()
{
        @Html.Partial("_CreateOrUpdate.PurchasedWithOrders", Model)
    }


    @helper TabColorsAndImages()
{
    Model.colorImage.ProductID = Model.Id;
        @Html.Partial("_CreateOrUpdate.ColorsAndImages", Model.colorImage)
    }
